{"version":3,"sources":["views/pages/default/index.tsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","minHeight","backgroundColor","padding","display","justifyContent","alignItems","icon","color","marginRight","heroButtons","cardGrid","paddingTop","paddingBottom","card","height","flexDirection","cardMedia","cardContent","flexGrow","footer","palette","background","paper","primaryCTAButton","info","main","dark","secondaryCTAButton","outlineColor","lime","outlineWidth","contrastText","particles","position","top","left","zIndex","width","featuresSection","viewFab","bottom","pricingCardHeader","pricingCard","marginBottom","pricingTierList","listStyle","textAlign","tierItem","title","fontSize","letterSpacing","fontWeight","description","particlesConfig","number","value","density","enable","value_area","shape","type","stroke","polygon","nb_sides","image","src","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","stripe","Stripe","STRIPE_PUBLIC_KEY","snackbar","useSnackbar","useCookies","sessionCookie","useState","isLoggedIn","setIsLoggedIn","hasSubscription","setHasSubscription","hasSubscriptionCancelled","setHasSubscriptionCancelled","btnDisabled","setBtnDisabled","classes","useStore","sendMessage","message","status","enqueueSnackbar","variant","anchorOrigin","vertical","horizontal","finishPreps","useEffect","auth","console","log","sessionLogin","fetch","method","credentials","then","r","json","body","success","data","isCancelled","alert","className","params","maxWidth","style","component","align","gutterBottom","container","justify","item","disabled","autoFocus","focusRipple","disableRipple","disableTouchRipple","onClick","window","confirm","res","Error","setTimeout","location","reload","catch","e","warn","redirectToCheckout","sessionId","replace","doAction"],"mappings":"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","file":"static/js/4.5a9626f3.chunk.js","sourcesContent":["import { Button, Container, Grid, Typography } from \"@material-ui/core\";\r\nimport { lime } from \"@material-ui/core/colors\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Particles, { IParticlesParams } from \"react-particles-js\";\r\nimport { useStore } from \"react-redux\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { sessionLogin } from \"../../../util/actions\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { STRIPE_PUBLIC_KEY } from \"../../../util/constants\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        marginTop: theme.spacing(0),\r\n        minHeight: \"100vh\",\r\n        backgroundColor: \"#1f1d1d\",\r\n        padding: theme.spacing(8, 0, 6),\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    icon: {\r\n        color: \"#ffffff\",\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4)\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8)\r\n    },\r\n    card: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\"\r\n    },\r\n    cardMedia: {\r\n        paddingTop: \"56.25%\" // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6)\r\n    },\r\n    primaryCTAButton: {\r\n        backgroundColor: theme.palette.info.main,\r\n        color: \"#ffffff\",\r\n        \"&:hover\": {\r\n            backgroundColor: theme.palette.info.dark\r\n        },\r\n        \"&:active\": {\r\n            backgroundColor: theme.palette.info.dark\r\n        }\r\n    },\r\n    secondaryCTAButton: {\r\n        backgroundColor: \"inherit\",\r\n        outlineColor: lime[\"500\"],\r\n        outlineWidth: 5,\r\n        \"&:hover\": {\r\n            backgroundColor: lime[\"600\"],\r\n            color: theme.palette.info.contrastText\r\n        }\r\n    },\r\n    particles: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        height: \"100%\",\r\n        width: \"99%\"\r\n    },\r\n    featuresSection: {\r\n        marginTop: 30,\r\n        zIndex: 1\r\n    },\r\n    viewFab: {\r\n        marginTop: 15,\r\n        width: 40,\r\n        bottom: 0\r\n    },\r\n    pricingCardHeader: {\r\n        backgroundColor: \"#4f4f4f\",\r\n        color: \"#bfbfbf\"\r\n    },\r\n    pricingCard: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"baseline\",\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    pricingTierList: {\r\n        listStyle: \"none\",\r\n        textAlign: \"left\"\r\n    },\r\n    tierItem: {\r\n        textAlign: \"left\",\r\n        marginBottom: 12\r\n    },\r\n    title: {\r\n        color: \"#f3f3f3\",\r\n        fontSize: \"46px\",\r\n        letterSpacing: \"2px\",\r\n        fontWeight: \"bolder\"\r\n    },\r\n    description: {\r\n        fontSize: \"20px\",\r\n        color: \"#a4a4a4\"\r\n    }\r\n}));\r\n\r\nconst particlesConfig = {\r\n    particles: {\r\n        number: {\r\n            value: 40,\r\n            density: {\r\n                enable: true,\r\n                value_area: 800\r\n            }\r\n        },\r\n        color: {\r\n            value: [ \"#29b1fc\" ]\r\n        },\r\n        shape: {\r\n            type: \"circle\",\r\n            stroke: {\r\n                width: 1,\r\n                color: \"#000000\"\r\n            },\r\n            polygon: {\r\n                nb_sides: 5\r\n            },\r\n            image: {\r\n                src: \"\",\r\n                width: 100,\r\n                height: 100\r\n            }\r\n        },\r\n        opacity: {\r\n            value: 0.5,\r\n            random: true,\r\n            anim: {\r\n                enable: false,\r\n                speed: 1,\r\n                opacity_min: 0.1,\r\n                sync: false\r\n            }\r\n        },\r\n        size: {\r\n            value: 5,\r\n            random: true,\r\n            anim: {\r\n                enable: false,\r\n                speed: 20,\r\n                size_min: 0.1,\r\n                sync: false\r\n            }\r\n        },\r\n        line_linked: {\r\n            enable: true,\r\n            distance: 120,\r\n            color: \"#62a7fd\",\r\n            opacity: 0.2,\r\n            width: 1.6\r\n        },\r\n        move: {\r\n            enable: true,\r\n            speed: 2,\r\n            // @ts-ignore\r\n            direction: \"top\",\r\n            random: false,\r\n            straight: false,\r\n            // @ts-ignore\r\n            out_mode: \"out\",\r\n            bounce: false,\r\n            attract: {\r\n                enable: true,\r\n                rotateX: 600,\r\n                rotateY: 1200\r\n            }\r\n        }\r\n    },\r\n    interactivity: {\r\n        // @ts-ignore\r\n        detect_on: \"canvas\",\r\n        events: {\r\n            onhover: {\r\n                enable: true,\r\n                mode: \"bubble\"\r\n            },\r\n            onclick: {\r\n                enable: true\r\n            },\r\n            resize: true\r\n        },\r\n        modes: {\r\n            grab: {\r\n                distance: 140,\r\n                line_linked: {\r\n                    opacity: 1\r\n                }\r\n            },\r\n            bubble: {\r\n                distance: 400,\r\n                size: 2,\r\n                duration: 2,\r\n                opacity: 8\r\n            },\r\n            repulse: {\r\n                distance: 20,\r\n                duration: 0.4\r\n            },\r\n            push: {\r\n                particles_nb: 4\r\n            },\r\n            remove: {\r\n                particles_nb: 2\r\n            }\r\n        }\r\n    },\r\n    retina_detect: true\r\n} as IParticlesParams;\r\n\r\n\r\nexport default function () {\r\n    // @ts-ignore\r\n    const stripe = new Stripe(STRIPE_PUBLIC_KEY);\r\n    const snackbar = useSnackbar();\r\n    const [ sessionCookie, setSessionCookie, removeSessionCookie ] = useCookies([ \"auth\" ]);\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false);\r\n    const [ hasSubscription, setHasSubscription ] = useState(false);\r\n    const [ hasSubscriptionCancelled, setHasSubscriptionCancelled ] = useState(false);\r\n    const [ btnDisabled, setBtnDisabled ] = useState(true);\r\n    const store = useStore();\r\n    const classes = useStyles();\r\n    \r\n    const sendMessage = (message: string, status: \"info\" | \"success\" | \"error\") => {\r\n        snackbar.enqueueSnackbar(\r\n            message,\r\n            {\r\n                variant: status,\r\n                anchorOrigin: {\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\"\r\n                }\r\n            }\r\n        );\r\n    };\r\n    \r\n    const doAction = () => {\r\n        if (isLoggedIn) {\r\n            if (hasSubscription) {\r\n                const wanted = window.confirm(\"Are you sure you want to cancel your subscription?\");\r\n                \r\n                if (wanted) {\r\n                    sendMessage(\"Unsubscribing..\", \"info\");\r\n                    \r\n                    if (hasSubscriptionCancelled) {\r\n                        sendMessage(\"Already pending cancellation!\", \"error\");\r\n                        return;\r\n                    }\r\n                    \r\n                    fetch(\"/api/payment/cancel-subscription\", {\r\n                        method: \"POST\",\r\n                        credentials: \"include\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(data => {\r\n                            if (data.success) {\r\n                                sendMessage(\"Unsubscribed!\", \"success\");\r\n                                setTimeout(() => {\r\n                                    window.location.reload();\r\n                                }, 1500);\r\n                            } else {\r\n                                throw new Error(\"Returned with no success\");\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.warn(e);\r\n                            \r\n                            sendMessage(\"Failed to unsubscribe!\", \"error\");\r\n                        });\r\n                }\r\n            } else {\r\n                sendMessage(\"Sending you to Stripe..\", \"info\");\r\n                setTimeout(() => {\r\n                    fetch(\"/api/payment/create-checkout-session\", {\r\n                        method: \"POST\"\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then((body: any) => {\r\n                            stripe\r\n                                .redirectToCheckout({\r\n                                    sessionId: body.data.sessionId\r\n                                });\r\n                        })\r\n                        .catch(e => {\r\n                            console.warn(e);\r\n                            sendMessage(`An error occurred while creating checkout session!`, \"error\");\r\n                            return;\r\n                        });\r\n                }, 2000);\r\n            }\r\n        } else {\r\n            // Subscribe\r\n            window.location.replace(\"/auth/redirect\");\r\n        }\r\n    };\r\n    \r\n    const finishPreps = () => {\r\n        setBtnDisabled(false);\r\n    };\r\n    \r\n    useEffect(() => {\r\n        if (sessionCookie && sessionCookie.auth) {\r\n            console.log(\"logged in!\");\r\n            sessionLogin(sessionCookie.auth);\r\n            setIsLoggedIn(true);\r\n            \r\n            fetch(\"/api/payment/get-subscription-status\", {\r\n                method: \"POST\",\r\n                credentials: \"include\"\r\n            })\r\n                .then(r => r.json())\r\n                .then((body: any) => {\r\n                    if (body && body.success) {\r\n                        setHasSubscription((body.data as any).hasSubscription as boolean);\r\n                        setHasSubscriptionCancelled((body.data as any).isCancelled as boolean);\r\n                        finishPreps();\r\n    \r\n                        if (hasSubscriptionCancelled || body.data.isCancelled) {\r\n                            sendMessage(`Note: Your subscription is pending cancellation!`, \"info\");\r\n                        }\r\n                    } else {\r\n                        alert(\"Failed to retrieve subscription status!\");\r\n                    }\r\n                });\r\n        } else {\r\n            finishPreps();\r\n        }\r\n    }, []);\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div className={ classes.root }>\r\n                <Particles className={ classes.particles } params={ particlesConfig }/>\r\n                <Container maxWidth=\"sm\" style={ { zIndex: 1 } }>\r\n                    <Typography\r\n                        component=\"h2\"\r\n                        variant=\"h2\"\r\n                        align=\"center\"\r\n                        className={ classes.title }\r\n                        style={ { zIndex: 1 } }\r\n                        gutterBottom\r\n                    >\r\n                        Stock Alerts\r\n                    </Typography>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        align=\"center\"\r\n                        className={ classes.description }\r\n                        gutterBottom\r\n                    >\r\n                        Alerts sent by experienced traders. We send alerts on when to buy and sell.\r\n                        Additionally, we provide our watchlist daily.\r\n                    </Typography>\r\n                    <div className={ classes.heroButtons }>\r\n                        <Grid container spacing={ 2 } justify=\"center\">\r\n                            <Grid item>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    className={ classes.primaryCTAButton }\r\n                                    disabled={ btnDisabled }\r\n                                    size=\"large\"\r\n                                    style={ {\r\n                                        backgroundColor: isLoggedIn ? hasSubscription ? \"#d63434\" : \"#1ad485\" : \"#3b8cf1\"\r\n                                    } }\r\n                                    autoFocus={ true }\r\n                                    focusRipple={ false }\r\n                                    disableRipple={ false }\r\n                                    disableTouchRipple={ false }\r\n                                    onClick={ () => doAction() }\r\n                                >\r\n                                    {\r\n                                        isLoggedIn ? (\r\n                                            hasSubscription ? (\r\n                                                <>\r\n                                                    <i className={ classes.icon + \" fas fa-unlink fa-lg\" }/>\r\n                                                    Unsubscribe\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <i className={ classes.icon + \" fas fa-satellite-dish fa-lg\" }/>\r\n                                                    Subscribe\r\n                                                </>\r\n                                            )\r\n                                        ) : (\r\n                                            <>\r\n                                                <i className={ classes.icon + \" fab fa-discord fa-lg\" }/>\r\n                                                Get Started\r\n                                            </>\r\n                                        )\r\n                                    }\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </>\r\n    );\r\n    \r\n}\r\n"],"sourceRoot":""}